name: Publish

on:
  push:
    branches:
      - main
    paths:
      - 'packages/**'

permissions:
  actions: read
  contents: read

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v42
        with:
          files: packages/**
          json: true

      - name: Set matrix
        id: set-matrix
        run: |
          CHANGES=$(echo ${{ steps.changed-files.outputs.all_changed_files }} | jq -c '
            map(
              capture("^packages/(?<package>[^/]+)").package
            ) |
            unique
          ')
          echo "matrix=${CHANGES}" >> $GITHUB_OUTPUT

  main:
    needs: detect-changes
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Install pnpm
      - uses: pnpm/action-setup@v4

      # Cache node_modules
      - uses: actions/setup-node@v4
        with:
          node-version: 23.x
          cache: 'pnpm'

      # Setup .npmrc file to publish to npm
      - run: |
          echo "registry=https://registry.npmjs.org/" > ~/.npmrc
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc

      # Install dependencies
      - run: pnpm install --frozen-lockfile
      - uses: nrwl/nx-set-shas@v4

      # Publishing changed packages
      - name: Publishing changed packages
        if: needs.detect-changes.outputs.matrix != '[]'
        run: |
          echo '${{needs.detect-changes.outputs.matrix}}' | jq -r '.[]' | while read project; do
            echo "Publish @sao-icons/$project"
            pnpm exec nx run $project:auto
          done
